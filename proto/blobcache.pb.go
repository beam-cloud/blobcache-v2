// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v4.25.1
// source: blobcache.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash   string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`      // Hash of the content to retrieve
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"` // Offset into the content
	Length int64  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"` // Length of the content to retrieve
}

func (x *GetContentRequest) Reset() {
	*x = GetContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentRequest) ProtoMessage() {}

func (x *GetContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentRequest.ProtoReflect.Descriptor instead.
func (*GetContentRequest) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{0}
}

func (x *GetContentRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetContentRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetContentRequest) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type GetContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` // Content data
}

func (x *GetContentResponse) Reset() {
	*x = GetContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentResponse) ProtoMessage() {}

func (x *GetContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentResponse.ProtoReflect.Descriptor instead.
func (*GetContentResponse) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{1}
}

func (x *GetContentResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetContentResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type StoreContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Hash    string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *StoreContentRequest) Reset() {
	*x = StoreContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreContentRequest) ProtoMessage() {}

func (x *StoreContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreContentRequest.ProtoReflect.Descriptor instead.
func (*StoreContentRequest) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{2}
}

func (x *StoreContentRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *StoreContentRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type StoreContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"` // Hash of the stored content
	Ok   bool   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *StoreContentResponse) Reset() {
	*x = StoreContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreContentResponse) ProtoMessage() {}

func (x *StoreContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreContentResponse.ProtoReflect.Descriptor instead.
func (*StoreContentResponse) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{3}
}

func (x *StoreContentResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *StoreContentResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type StoreContentFromSourceWithLockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash                string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"` // Hash of the stored content
	FailedToAcquireLock bool   `protobuf:"varint,2,opt,name=failed_to_acquire_lock,json=failedToAcquireLock,proto3" json:"failed_to_acquire_lock,omitempty"`
}

func (x *StoreContentFromSourceWithLockResponse) Reset() {
	*x = StoreContentFromSourceWithLockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreContentFromSourceWithLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreContentFromSourceWithLockResponse) ProtoMessage() {}

func (x *StoreContentFromSourceWithLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreContentFromSourceWithLockResponse.ProtoReflect.Descriptor instead.
func (*StoreContentFromSourceWithLockResponse) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{4}
}

func (x *StoreContentFromSourceWithLockResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *StoreContentFromSourceWithLockResponse) GetFailedToAcquireLock() bool {
	if x != nil {
		return x.FailedToAcquireLock
	}
	return false
}

type GetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStateRequest) Reset() {
	*x = GetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateRequest) ProtoMessage() {}

func (x *GetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateRequest.ProtoReflect.Descriptor instead.
func (*GetStateRequest) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{5}
}

type GetStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version          string  `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	CapacityUsagePct float32 `protobuf:"fixed32,2,opt,name=capacity_usage_pct,json=capacityUsagePct,proto3" json:"capacity_usage_pct,omitempty"`
	PrivateIpAddr    string  `protobuf:"bytes,3,opt,name=private_ip_addr,json=privateIpAddr,proto3" json:"private_ip_addr,omitempty"`
}

func (x *GetStateResponse) Reset() {
	*x = GetStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateResponse) ProtoMessage() {}

func (x *GetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateResponse.ProtoReflect.Descriptor instead.
func (*GetStateResponse) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{6}
}

func (x *GetStateResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetStateResponse) GetCapacityUsagePct() float32 {
	if x != nil {
		return x.CapacityUsagePct
	}
	return 0
}

func (x *GetStateResponse) GetPrivateIpAddr() string {
	if x != nil {
		return x.PrivateIpAddr
	}
	return ""
}

type StoreContentFromSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourcePath   string `protobuf:"bytes,1,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	SourceOffset int64  `protobuf:"varint,2,opt,name=source_offset,json=sourceOffset,proto3" json:"source_offset,omitempty"`
}

func (x *StoreContentFromSourceRequest) Reset() {
	*x = StoreContentFromSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreContentFromSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreContentFromSourceRequest) ProtoMessage() {}

func (x *StoreContentFromSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreContentFromSourceRequest.ProtoReflect.Descriptor instead.
func (*StoreContentFromSourceRequest) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{7}
}

func (x *StoreContentFromSourceRequest) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *StoreContentFromSourceRequest) GetSourceOffset() int64 {
	if x != nil {
		return x.SourceOffset
	}
	return 0
}

type StoreContentFromSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok   bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Hash string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *StoreContentFromSourceResponse) Reset() {
	*x = StoreContentFromSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreContentFromSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreContentFromSourceResponse) ProtoMessage() {}

func (x *StoreContentFromSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreContentFromSourceResponse.ProtoReflect.Descriptor instead.
func (*StoreContentFromSourceResponse) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{8}
}

func (x *StoreContentFromSourceResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StoreContentFromSourceResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetAvailableHostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locality string `protobuf:"bytes,1,opt,name=locality,proto3" json:"locality,omitempty"`
}

func (x *GetAvailableHostsRequest) Reset() {
	*x = GetAvailableHostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableHostsRequest) ProtoMessage() {}

func (x *GetAvailableHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableHostsRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableHostsRequest) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{9}
}

func (x *GetAvailableHostsRequest) GetLocality() string {
	if x != nil {
		return x.Locality
	}
	return ""
}

type GetAvailableHostsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts []*BlobCacheHost `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
}

func (x *GetAvailableHostsResponse) Reset() {
	*x = GetAvailableHostsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableHostsResponse) ProtoMessage() {}

func (x *GetAvailableHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableHostsResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableHostsResponse) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{10}
}

func (x *GetAvailableHostsResponse) GetHosts() []*BlobCacheHost {
	if x != nil {
		return x.Hosts
	}
	return nil
}

type BlobCacheHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host          string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Addr          string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	PrivateIpAddr string `protobuf:"bytes,3,opt,name=private_ip_addr,json=privateIpAddr,proto3" json:"private_ip_addr,omitempty"`
}

func (x *BlobCacheHost) Reset() {
	*x = BlobCacheHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobCacheHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobCacheHost) ProtoMessage() {}

func (x *BlobCacheHost) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobCacheHost.ProtoReflect.Descriptor instead.
func (*BlobCacheHost) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{11}
}

func (x *BlobCacheHost) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *BlobCacheHost) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *BlobCacheHost) GetPrivateIpAddr() string {
	if x != nil {
		return x.PrivateIpAddr
	}
	return ""
}

type SetClientLockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *SetClientLockRequest) Reset() {
	*x = SetClientLockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetClientLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetClientLockRequest) ProtoMessage() {}

func (x *SetClientLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetClientLockRequest.ProtoReflect.Descriptor instead.
func (*SetClientLockRequest) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{12}
}

func (x *SetClientLockRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *SetClientLockRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type SetClientLockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetClientLockResponse) Reset() {
	*x = SetClientLockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetClientLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetClientLockResponse) ProtoMessage() {}

func (x *SetClientLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetClientLockResponse.ProtoReflect.Descriptor instead.
func (*SetClientLockResponse) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{13}
}

type RemoveClientLockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *RemoveClientLockRequest) Reset() {
	*x = RemoveClientLockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveClientLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveClientLockRequest) ProtoMessage() {}

func (x *RemoveClientLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveClientLockRequest.ProtoReflect.Descriptor instead.
func (*RemoveClientLockRequest) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveClientLockRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *RemoveClientLockRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type RemoveClientLockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveClientLockResponse) Reset() {
	*x = RemoveClientLockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveClientLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveClientLockResponse) ProtoMessage() {}

func (x *RemoveClientLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveClientLockResponse.ProtoReflect.Descriptor instead.
func (*RemoveClientLockResponse) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{15}
}

type RetrieveEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *RetrieveEntryRequest) Reset() {
	*x = RetrieveEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveEntryRequest) ProtoMessage() {}

func (x *RetrieveEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveEntryRequest.ProtoReflect.Descriptor instead.
func (*RetrieveEntryRequest) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{16}
}

func (x *RetrieveEntryRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type RetrieveEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *RetrieveEntryResponse) Reset() {
	*x = RetrieveEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveEntryResponse) ProtoMessage() {}

func (x *RetrieveEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveEntryResponse.ProtoReflect.Descriptor instead.
func (*RetrieveEntryResponse) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{17}
}

func (x *RetrieveEntryResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *RetrieveEntryResponse) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type SetFsNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Hash      string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Size      uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Blocks    uint64 `protobuf:"varint,4,opt,name=blocks,proto3" json:"blocks,omitempty"`
	Atime     uint64 `protobuf:"varint,5,opt,name=atime,proto3" json:"atime,omitempty"`
	Mtime     uint64 `protobuf:"varint,6,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Ctime     uint64 `protobuf:"varint,7,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Atimensec uint64 `protobuf:"varint,8,opt,name=atimensec,proto3" json:"atimensec,omitempty"`
	Mtimensec uint64 `protobuf:"varint,9,opt,name=mtimensec,proto3" json:"mtimensec,omitempty"`
	Ctimensec uint64 `protobuf:"varint,10,opt,name=ctimensec,proto3" json:"ctimensec,omitempty"`
	Mode      uint64 `protobuf:"varint,11,opt,name=mode,proto3" json:"mode,omitempty"`
	Nlink     uint64 `protobuf:"varint,12,opt,name=nlink,proto3" json:"nlink,omitempty"`
	Rdev      uint64 `protobuf:"varint,13,opt,name=rdev,proto3" json:"rdev,omitempty"`
	Blksize   uint64 `protobuf:"varint,14,opt,name=blksize,proto3" json:"blksize,omitempty"`
	Padding   uint64 `protobuf:"varint,15,opt,name=padding,proto3" json:"padding,omitempty"`
	Uid       uint64 `protobuf:"varint,16,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid       uint64 `protobuf:"varint,17,opt,name=gid,proto3" json:"gid,omitempty"`
	Gen       uint64 `protobuf:"varint,18,opt,name=gen,proto3" json:"gen,omitempty"`
}

func (x *SetFsNodeRequest) Reset() {
	*x = SetFsNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFsNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFsNodeRequest) ProtoMessage() {}

func (x *SetFsNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFsNodeRequest.ProtoReflect.Descriptor instead.
func (*SetFsNodeRequest) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{18}
}

func (x *SetFsNodeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SetFsNodeRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *SetFsNodeRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SetFsNodeRequest) GetBlocks() uint64 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *SetFsNodeRequest) GetAtime() uint64 {
	if x != nil {
		return x.Atime
	}
	return 0
}

func (x *SetFsNodeRequest) GetMtime() uint64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *SetFsNodeRequest) GetCtime() uint64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *SetFsNodeRequest) GetAtimensec() uint64 {
	if x != nil {
		return x.Atimensec
	}
	return 0
}

func (x *SetFsNodeRequest) GetMtimensec() uint64 {
	if x != nil {
		return x.Mtimensec
	}
	return 0
}

func (x *SetFsNodeRequest) GetCtimensec() uint64 {
	if x != nil {
		return x.Ctimensec
	}
	return 0
}

func (x *SetFsNodeRequest) GetMode() uint64 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *SetFsNodeRequest) GetNlink() uint64 {
	if x != nil {
		return x.Nlink
	}
	return 0
}

func (x *SetFsNodeRequest) GetRdev() uint64 {
	if x != nil {
		return x.Rdev
	}
	return 0
}

func (x *SetFsNodeRequest) GetBlksize() uint64 {
	if x != nil {
		return x.Blksize
	}
	return 0
}

func (x *SetFsNodeRequest) GetPadding() uint64 {
	if x != nil {
		return x.Padding
	}
	return 0
}

func (x *SetFsNodeRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SetFsNodeRequest) GetGid() uint64 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *SetFsNodeRequest) GetGen() uint64 {
	if x != nil {
		return x.Gen
	}
	return 0
}

type SetFsNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetFsNodeResponse) Reset() {
	*x = SetFsNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFsNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFsNodeResponse) ProtoMessage() {}

func (x *SetFsNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFsNodeResponse.ProtoReflect.Descriptor instead.
func (*SetFsNodeResponse) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{19}
}

type GetFsNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFsNodeRequest) Reset() {
	*x = GetFsNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFsNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFsNodeRequest) ProtoMessage() {}

func (x *GetFsNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFsNodeRequest.ProtoReflect.Descriptor instead.
func (*GetFsNodeRequest) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{20}
}

func (x *GetFsNodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetFsNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path      string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Hash      string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Size      uint64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Blocks    uint64 `protobuf:"varint,5,opt,name=blocks,proto3" json:"blocks,omitempty"`
	Atime     uint64 `protobuf:"varint,6,opt,name=atime,proto3" json:"atime,omitempty"`
	Mtime     uint64 `protobuf:"varint,7,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Ctime     uint64 `protobuf:"varint,8,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Atimensec uint64 `protobuf:"varint,9,opt,name=atimensec,proto3" json:"atimensec,omitempty"`
	Mtimensec uint64 `protobuf:"varint,10,opt,name=mtimensec,proto3" json:"mtimensec,omitempty"`
	Ctimensec uint64 `protobuf:"varint,11,opt,name=ctimensec,proto3" json:"ctimensec,omitempty"`
	Mode      uint64 `protobuf:"varint,12,opt,name=mode,proto3" json:"mode,omitempty"`
	Nlink     uint64 `protobuf:"varint,13,opt,name=nlink,proto3" json:"nlink,omitempty"`
	Rdev      uint64 `protobuf:"varint,14,opt,name=rdev,proto3" json:"rdev,omitempty"`
	Blksize   uint64 `protobuf:"varint,15,opt,name=blksize,proto3" json:"blksize,omitempty"`
	Padding   uint64 `protobuf:"varint,16,opt,name=padding,proto3" json:"padding,omitempty"`
	Uid       uint64 `protobuf:"varint,17,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid       uint64 `protobuf:"varint,18,opt,name=gid,proto3" json:"gid,omitempty"`
	Gen       uint64 `protobuf:"varint,19,opt,name=gen,proto3" json:"gen,omitempty"`
}

func (x *GetFsNodeResponse) Reset() {
	*x = GetFsNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFsNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFsNodeResponse) ProtoMessage() {}

func (x *GetFsNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFsNodeResponse.ProtoReflect.Descriptor instead.
func (*GetFsNodeResponse) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{21}
}

func (x *GetFsNodeResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFsNodeResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetFsNodeResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetFsNodeResponse) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetFsNodeResponse) GetBlocks() uint64 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *GetFsNodeResponse) GetAtime() uint64 {
	if x != nil {
		return x.Atime
	}
	return 0
}

func (x *GetFsNodeResponse) GetMtime() uint64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *GetFsNodeResponse) GetCtime() uint64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *GetFsNodeResponse) GetAtimensec() uint64 {
	if x != nil {
		return x.Atimensec
	}
	return 0
}

func (x *GetFsNodeResponse) GetMtimensec() uint64 {
	if x != nil {
		return x.Mtimensec
	}
	return 0
}

func (x *GetFsNodeResponse) GetCtimensec() uint64 {
	if x != nil {
		return x.Ctimensec
	}
	return 0
}

func (x *GetFsNodeResponse) GetMode() uint64 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *GetFsNodeResponse) GetNlink() uint64 {
	if x != nil {
		return x.Nlink
	}
	return 0
}

func (x *GetFsNodeResponse) GetRdev() uint64 {
	if x != nil {
		return x.Rdev
	}
	return 0
}

func (x *GetFsNodeResponse) GetBlksize() uint64 {
	if x != nil {
		return x.Blksize
	}
	return 0
}

func (x *GetFsNodeResponse) GetPadding() uint64 {
	if x != nil {
		return x.Padding
	}
	return 0
}

func (x *GetFsNodeResponse) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetFsNodeResponse) GetGid() uint64 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *GetFsNodeResponse) GetGen() uint64 {
	if x != nil {
		return x.Gen
	}
	return 0
}

type GetFsNodeChildrenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFsNodeChildrenRequest) Reset() {
	*x = GetFsNodeChildrenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFsNodeChildrenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFsNodeChildrenRequest) ProtoMessage() {}

func (x *GetFsNodeChildrenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFsNodeChildrenRequest.ProtoReflect.Descriptor instead.
func (*GetFsNodeChildrenRequest) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{22}
}

func (x *GetFsNodeChildrenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetFsNodeChildrenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*FsNode `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *GetFsNodeChildrenResponse) Reset() {
	*x = GetFsNodeChildrenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFsNodeChildrenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFsNodeChildrenResponse) ProtoMessage() {}

func (x *GetFsNodeChildrenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFsNodeChildrenResponse.ProtoReflect.Descriptor instead.
func (*GetFsNodeChildrenResponse) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{23}
}

func (x *GetFsNodeChildrenResponse) GetChildren() []*FsNode {
	if x != nil {
		return x.Children
	}
	return nil
}

type FsNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Hash string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Size uint64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FsNode) Reset() {
	*x = FsNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blobcache_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsNode) ProtoMessage() {}

func (x *FsNode) ProtoReflect() protoreflect.Message {
	mi := &file_blobcache_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsNode.ProtoReflect.Descriptor instead.
func (*FsNode) Descriptor() ([]byte, []int) {
	return file_blobcache_proto_rawDescGZIP(), []int{24}
}

func (x *FsNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FsNode) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FsNode) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *FsNode) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_blobcache_proto protoreflect.FileDescriptor

var file_blobcache_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x22, 0x57, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x3a, 0x0a, 0x14, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x71, 0x0a, 0x26, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x16, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x74,
	0x6f, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x6f, 0x41, 0x63,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x82, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x63,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x63, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x22, 0x65, 0x0a, 0x1d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x44, 0x0a, 0x1e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x36,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x4b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x42,
	0x6c, 0x6f, 0x62, 0x43, 0x61, 0x63, 0x68, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x68, 0x6f,
	0x73, 0x74, 0x73, 0x22, 0x5f, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x62, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x22, 0x3e, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a,
	0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a, 0x14,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x3f, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0xaa, 0x03, 0x0a, 0x10, 0x53, 0x65,
	0x74, 0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65,
	0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x64, 0x65, 0x76,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x72, 0x64, 0x65, 0x76, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x6c, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62,
	0x6c, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x67, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x65, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x67, 0x65, 0x6e, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x46, 0x73, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xbb, 0x03, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x61, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x74, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x74,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x65, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x74, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x64, 0x65, 0x76, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x72,
	0x64, 0x65, 0x76, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6c, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67,
	0x65, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x65, 0x6e, 0x22, 0x2a, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x54, 0x0a, 0x06, 0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x32, 0x9e, 0x09, 0x0a, 0x09,
	0x42, 0x6c, 0x6f, 0x62, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x2e, 0x62, 0x6c, 0x6f,
	0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x0c, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x62, 0x6c,
	0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x6c,
	0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x12, 0x6f, 0x0a, 0x16, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x62, 0x6c, 0x6f,
	0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7f, 0x0a, 0x1e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4c,
	0x6f, 0x63, 0x6b, 0x12, 0x28, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x6c, 0x6f,
	0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x23,
	0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x53,
	0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x1f, 0x2e, 0x62,
	0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x22, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62, 0x6c, 0x6f, 0x62,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x54, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1f, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x46, 0x73, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x65, 0x74,
	0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e,
	0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x73, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x6c, 0x6f,
	0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12,
	0x23, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x73, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x27, 0x5a, 0x25,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x65, 0x61, 0x6d, 0x2d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blobcache_proto_rawDescOnce sync.Once
	file_blobcache_proto_rawDescData = file_blobcache_proto_rawDesc
)

func file_blobcache_proto_rawDescGZIP() []byte {
	file_blobcache_proto_rawDescOnce.Do(func() {
		file_blobcache_proto_rawDescData = protoimpl.X.CompressGZIP(file_blobcache_proto_rawDescData)
	})
	return file_blobcache_proto_rawDescData
}

var file_blobcache_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_blobcache_proto_goTypes = []interface{}{
	(*GetContentRequest)(nil),                      // 0: blobcache.GetContentRequest
	(*GetContentResponse)(nil),                     // 1: blobcache.GetContentResponse
	(*StoreContentRequest)(nil),                    // 2: blobcache.StoreContentRequest
	(*StoreContentResponse)(nil),                   // 3: blobcache.StoreContentResponse
	(*StoreContentFromSourceWithLockResponse)(nil), // 4: blobcache.StoreContentFromSourceWithLockResponse
	(*GetStateRequest)(nil),                        // 5: blobcache.GetStateRequest
	(*GetStateResponse)(nil),                       // 6: blobcache.GetStateResponse
	(*StoreContentFromSourceRequest)(nil),          // 7: blobcache.StoreContentFromSourceRequest
	(*StoreContentFromSourceResponse)(nil),         // 8: blobcache.StoreContentFromSourceResponse
	(*GetAvailableHostsRequest)(nil),               // 9: blobcache.GetAvailableHostsRequest
	(*GetAvailableHostsResponse)(nil),              // 10: blobcache.GetAvailableHostsResponse
	(*BlobCacheHost)(nil),                          // 11: blobcache.BlobCacheHost
	(*SetClientLockRequest)(nil),                   // 12: blobcache.SetClientLockRequest
	(*SetClientLockResponse)(nil),                  // 13: blobcache.SetClientLockResponse
	(*RemoveClientLockRequest)(nil),                // 14: blobcache.RemoveClientLockRequest
	(*RemoveClientLockResponse)(nil),               // 15: blobcache.RemoveClientLockResponse
	(*RetrieveEntryRequest)(nil),                   // 16: blobcache.RetrieveEntryRequest
	(*RetrieveEntryResponse)(nil),                  // 17: blobcache.RetrieveEntryResponse
	(*SetFsNodeRequest)(nil),                       // 18: blobcache.SetFsNodeRequest
	(*SetFsNodeResponse)(nil),                      // 19: blobcache.SetFsNodeResponse
	(*GetFsNodeRequest)(nil),                       // 20: blobcache.GetFsNodeRequest
	(*GetFsNodeResponse)(nil),                      // 21: blobcache.GetFsNodeResponse
	(*GetFsNodeChildrenRequest)(nil),               // 22: blobcache.GetFsNodeChildrenRequest
	(*GetFsNodeChildrenResponse)(nil),              // 23: blobcache.GetFsNodeChildrenResponse
	(*FsNode)(nil),                                 // 24: blobcache.FsNode
}
var file_blobcache_proto_depIdxs = []int32{
	11, // 0: blobcache.GetAvailableHostsResponse.hosts:type_name -> blobcache.BlobCacheHost
	24, // 1: blobcache.GetFsNodeChildrenResponse.children:type_name -> blobcache.FsNode
	0,  // 2: blobcache.BlobCache.GetContent:input_type -> blobcache.GetContentRequest
	0,  // 3: blobcache.BlobCache.GetContentStream:input_type -> blobcache.GetContentRequest
	2,  // 4: blobcache.BlobCache.StoreContent:input_type -> blobcache.StoreContentRequest
	7,  // 5: blobcache.BlobCache.StoreContentFromSource:input_type -> blobcache.StoreContentFromSourceRequest
	7,  // 6: blobcache.BlobCache.StoreContentFromSourceWithLock:input_type -> blobcache.StoreContentFromSourceRequest
	5,  // 7: blobcache.BlobCache.GetState:input_type -> blobcache.GetStateRequest
	9,  // 8: blobcache.BlobCache.GetAvailableHosts:input_type -> blobcache.GetAvailableHostsRequest
	12, // 9: blobcache.BlobCache.SetClientLock:input_type -> blobcache.SetClientLockRequest
	14, // 10: blobcache.BlobCache.RemoveClientLock:input_type -> blobcache.RemoveClientLockRequest
	16, // 11: blobcache.BlobCache.RetrieveEntry:input_type -> blobcache.RetrieveEntryRequest
	18, // 12: blobcache.BlobCache.SetFsNode:input_type -> blobcache.SetFsNodeRequest
	20, // 13: blobcache.BlobCache.GetFsNode:input_type -> blobcache.GetFsNodeRequest
	22, // 14: blobcache.BlobCache.GetFsNodeChildren:input_type -> blobcache.GetFsNodeChildrenRequest
	1,  // 15: blobcache.BlobCache.GetContent:output_type -> blobcache.GetContentResponse
	1,  // 16: blobcache.BlobCache.GetContentStream:output_type -> blobcache.GetContentResponse
	3,  // 17: blobcache.BlobCache.StoreContent:output_type -> blobcache.StoreContentResponse
	8,  // 18: blobcache.BlobCache.StoreContentFromSource:output_type -> blobcache.StoreContentFromSourceResponse
	4,  // 19: blobcache.BlobCache.StoreContentFromSourceWithLock:output_type -> blobcache.StoreContentFromSourceWithLockResponse
	6,  // 20: blobcache.BlobCache.GetState:output_type -> blobcache.GetStateResponse
	10, // 21: blobcache.BlobCache.GetAvailableHosts:output_type -> blobcache.GetAvailableHostsResponse
	13, // 22: blobcache.BlobCache.SetClientLock:output_type -> blobcache.SetClientLockResponse
	15, // 23: blobcache.BlobCache.RemoveClientLock:output_type -> blobcache.RemoveClientLockResponse
	17, // 24: blobcache.BlobCache.RetrieveEntry:output_type -> blobcache.RetrieveEntryResponse
	19, // 25: blobcache.BlobCache.SetFsNode:output_type -> blobcache.SetFsNodeResponse
	21, // 26: blobcache.BlobCache.GetFsNode:output_type -> blobcache.GetFsNodeResponse
	23, // 27: blobcache.BlobCache.GetFsNodeChildren:output_type -> blobcache.GetFsNodeChildrenResponse
	15, // [15:28] is the sub-list for method output_type
	2,  // [2:15] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_blobcache_proto_init() }
func file_blobcache_proto_init() {
	if File_blobcache_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blobcache_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreContentFromSourceWithLockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreContentFromSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreContentFromSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableHostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableHostsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobCacheHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetClientLockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetClientLockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveClientLockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveClientLockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFsNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFsNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFsNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFsNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFsNodeChildrenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFsNodeChildrenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blobcache_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blobcache_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blobcache_proto_goTypes,
		DependencyIndexes: file_blobcache_proto_depIdxs,
		MessageInfos:      file_blobcache_proto_msgTypes,
	}.Build()
	File_blobcache_proto = out.File
	file_blobcache_proto_rawDesc = nil
	file_blobcache_proto_goTypes = nil
	file_blobcache_proto_depIdxs = nil
}
