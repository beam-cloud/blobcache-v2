syntax = "proto3";

option go_package = "github.com/beam-cloud/blobcache/proto";

package blobcache;

service BlobCache {
  rpc GetContent(GetContentRequest) returns (GetContentResponse) {}
  rpc GetContentStream(GetContentRequest) returns (stream GetContentResponse) {}
  rpc StoreContent(stream StoreContentRequest) returns (StoreContentResponse) {}
  rpc StoreContentFromSource(StoreContentFromSourceRequest) returns (StoreContentFromSourceResponse) {}
  rpc StoreContentFromSourceWithLock(StoreContentFromSourceRequest) returns (StoreContentFromSourceWithLockResponse) {}
  rpc GetState(GetStateRequest)  returns (GetStateResponse) {}
}

message GetContentRequest {
  string hash = 1;  // Hash of the content to retrieve
  int64 offset = 2; // Offset into the content
  int64 length = 3; // Length of the content to retrieve
}

message GetContentResponse {
  bool ok = 1;
  bytes content = 2; // Content data
}

message StoreContentRequest {
  bytes content = 1;
}

message StoreContentResponse {
  string hash = 1; // Hash of the stored content
}

message StoreContentFromSourceWithLockResponse {
  string hash = 1; // Hash of the stored content
  bool failed_to_acquire_lock = 2;
}

message GetStateRequest {
}

message GetStateResponse {
  string version = 1;
  float capacity_usage_pct = 2;
  string private_ip_addr = 3;
}

message StoreContentFromSourceRequest {
  string source_path = 1;
  int64 source_offset = 2;
}

message StoreContentFromSourceResponse {
  bool ok = 1;
  string hash = 2;
}
